generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  passwordHash  String
  name          String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  adAccounts    AdAccount[]
  refreshTokens RefreshToken[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model AdAccount {
  id                  String     @id @default(uuid())
  provider            Provider
  providerAccountId   String     // ID from Meta Ads
  accessToken         String
  user                User       @relation(fields: [userId], references: [id])
  userId              String
  campaigns           Campaign[]
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
}

model Campaign {
  id                  String     @id @default(uuid())
  providerCampaignId  String     @unique
  adAccount           AdAccount  @relation(fields: [adAccountId], references: [id])
  adAccountId         String
  name                String
  objective           String
  status              CampaignStatus
  budget              Float
  adSets              AdSet[]
  metrics             Metric[]
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
}

model AdSet {
  id                String     @id @default(uuid())
  providerAdSetId   String     @unique
  campaign          Campaign   @relation(fields: [campaignId], references: [id])
  campaignId        String
  name              String
  placement         Json
  audience          Json
  budget            Float
  startDate         DateTime
  endDate           DateTime?
  status            CampaignStatus
  creatives         Creative[]
  metrics           Metric[]
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model Creative {
  id                   String    @id @default(uuid())
  providerCreativeId   String    @unique
  adSet                AdSet     @relation(fields: [adSetId], references: [id])
  adSetId              String
  headline             String
  description          String?
  mediaUrl             String
  cta                  CtaType
  metrics              Metric[]
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}

model Metric {
  id          String         @id @default(uuid())
  entityType  MetricEntity
  campaign    Campaign?      @relation(fields: [campaignId], references: [id])
  campaignId  String?
  adSet       AdSet?         @relation(fields: [adSetId], references: [id])
  adSetId     String?
  creative    Creative?      @relation(fields: [creativeId], references: [id])
  creativeId  String?
  impressions Int
  clicks      Int
  ctr         Float
  spend       Float
  conversions Int
  date        DateTime
  createdAt   DateTime @default(now())
}

enum Provider {
  META
  GOOGLE
}

enum CampaignStatus {
  ACTIVE
  PAUSED
  ENDED
}

enum MetricEntity {
  CAMPAIGN
  ADSET
  CREATIVE
}

enum CtaType {
  LEARN_MORE
  SIGN_UP
  SHOP_NOW
  DOWNLOAD
  CONTACT_US
}
